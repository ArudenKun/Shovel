name: Build and Upload Dev Release

permissions:
  contents: write

on:
#  push:
#    branches:
#      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        target-platform:
          - windows
          - linux
        target-arch:
          - x64
        include:
          - target-platform: windows
            os: windows-latest
            channel: win-x64-dev
          - target-platform: linux
            os: ubuntu-latest
            channel: linux-x64-dev
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_NOLOGO: true
      NUGET_CERT_REVOCATION_MODE: offline
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Get Version
        id: get-version
        shell: bash
        run: echo "version=$(grep -oE '<Version>[^<]+' src/Shovel/Shovel.csproj | sed 's/<Version>//')-dev.${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Check Cache
        id: check-cache
        uses: actions/cache@v4
        with:
          path: | 
            ~/.nuget/packages
            ~/.dotnet/toolResolverCache
            ${{ github.workspace }}/.config
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Install FUSE
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo add-apt-repository universe
          sudo apt install libfuse2

      - name: Install Velopack
        if: ${{ steps.check-cache.outputs.cache-hit == false }}
        run: |
          dotnet new tool-manifest
          dotnet tool install vpk
          
      - name: Restore
        if: ${{ steps.check-cache.outputs.cache-hit == false }}
        run: dotnet restore --locked-mode

      - name: Publish
        run: dotnet publish src/Shovel/Shovel.csproj -c Release -o publish -p:Version=${{ steps.get-version.outputs.version }}

      - name: Pack Release
        shell: bash
        run: >
          dotnet vpk pack 
          -u Shovel 
          -v ${{ steps.get-version.outputs.version }} 
          -p publish 
          -c ${{ matrix.channel }} 
          ${{ matrix.target-platform == 'linux' && '-i src/Shovel/Assets/shovel.png' || '' }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target-platform }}-build
          path: |
            Releases/
            !Releases/assets.*.json
            !Releases/RELEASES-*

  release:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get Hash
        id: get-hash
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - uses: actions/download-artifact@v4
        with:
          path: Releases
          merge-multiple: true

      - uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          delete_release: true
          tag_name: dev-build
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Dev ${{ steps.get-hash.outputs.sha_short }}-${{ needs.build.outputs.version }}
          prerelease: true
          tag_name: dev-build
          files: |
            Releases/*
